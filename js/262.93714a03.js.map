{"version":3,"file":"js/262.93714a03.js","mappings":"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","sources":["webpack://shop_project/./src/components/goods/Params.vue","webpack://shop_project/src/components/goods/Params.vue","webpack://shop_project/./src/components/goods/Params.vue?9d53","webpack://shop_project/./src/components/goods/Params.vue?9d3d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"分类参数\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意：只允许第三季分类设置相关参数\",\"type\":\"warning\",\"closable\":false,\"show-icon\":\"\"}}),_c('el-row',{staticClass:\"cate-option\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"options\":_vm.cateList,\"props\":_vm.CateProps,\"clearable\":\"\"},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible=true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.tagClose(i,scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.deleteParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible=true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.tagClose(i,scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.deleteParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加'+_vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.resetAddForm}},[_c('el-form',{ref:\"addParamsFormRef\",attrs:{\"model\":_vm.addParamsForm,\"rules\":_vm.addParamsFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addParamsForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addParamsForm, \"attr_name\", $$v)},expression:\"addParamsForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'修改'+_vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.reseteditForm}},[_c('el-form',{ref:\"editParamsFormRef\",attrs:{\"model\":_vm.editParamsForm,\"rules\":_vm.editParamsFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editParamsForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editParamsForm, \"attr_name\", $$v)},expression:\"editParamsForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航栏 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert title=\"注意：只允许第三季分类设置相关参数\" type=\"warning\" :closable=\"false\" show-icon></el-alert>\r\n      <!-- 分类级联选择器区域 -->\r\n      <el-row class=\"cate-option\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <el-cascader\r\n            v-model=\"selectedKeys\"\r\n            :options=\"cateList\"\r\n            :props=\"CateProps\"\r\n            clearable\r\n            @change=\"handleChange\"></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- Tab 页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加按钮区域 -->\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click=\"addDialogVisible=true\">添加参数</el-button>\r\n          <!-- 动态参数表格区域 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染的tag标签 -->\r\n                <el-tag v-for=\"(item ,i) in scope.row.attr_vals\" :key=\"i\" closable @close='tagClose(i,scope.row)'>{{item}}</el-tag>\r\n                <!-- 输入的文本框 & 可添加的tag标签 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\">\r\n                </el-input>\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 序号列 -->\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"deleteParams(scope.row.attr_id)\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加按钮区域 -->\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click=\"addDialogVisible=true\">添加属性</el-button>\r\n          <!-- 静态属性表格区域 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染的tag标签 -->\r\n                <el-tag v-for=\"(item ,i) in scope.row.attr_vals\" :key=\"i\" closable @close='tagClose(i,scope.row)'>{{item}}</el-tag>\r\n                <!-- 输入的文本框 & 可添加的tag标签 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\">\r\n                </el-input>\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 其他列 -->\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"deleteParams(scope.row.attr_id)\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加对话框区域 -->\r\n    <el-dialog\r\n      :title=\"'添加'+titleText\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"resetAddForm\">\r\n      <!-- 表单区域 -->\r\n      <el-form :model=\"addParamsForm\" :rules=\"addParamsFormRules\" ref=\"addParamsFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addParamsForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 按钮区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改对话框区域 -->\r\n    <el-dialog\r\n      :title=\"'修改'+titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"reseteditForm\">\r\n      <!-- 表单区域 -->\r\n      <el-form :model=\"editParamsForm\" :rules=\"editParamsFormRules\" ref=\"editParamsFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editParamsForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 按钮区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      // 分类数据列表\r\n      cateList: [],\r\n      // 存放选中的id的数组\r\n      selectedKeys: [],\r\n      // 配置项参数\r\n      CateProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children',\r\n        expandTrigger: 'hover'\r\n      },\r\n      // 当前显示的页签名字,点击页签，会自动修改的\r\n      activeName: 'many',\r\n      // 动态参数页签数据\r\n      manyTableData: [],\r\n      // 静态属性页签数据\r\n      onlyTableData: [],\r\n      // 控制添加对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 表单数据对象\r\n      addParamsForm: {\r\n        // 参数名称\r\n        attr_name: ''\r\n      },\r\n      // 添加表单验证规则\r\n      addParamsFormRules: {\r\n        // 有个小bug！！！不同对话框应该显示不同的信息\r\n        attr_name: [{\r\n          required: true, message: '请输入参数名称', trigger: 'blur'\r\n        }]\r\n      },\r\n      // 控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 修改对话框表单数据对象\r\n      editParamsForm: {\r\n        attr_name: ''\r\n      },\r\n      // 修改表单验证规则\r\n      editParamsFormRules: {\r\n        attr_name: [{\r\n          required: true, message: '请输入修改名称', trigger: 'blur'\r\n        }]\r\n      },\r\n      // 控制输入框的显示与隐藏\r\n      inputVisible: false,\r\n      // 输入框中填入的内容\r\n      inputValue: ''\r\n    }\r\n  },\r\n  // 计算属性\r\n  computed: {\r\n    // 添加按钮是否禁用\r\n    isBtnDisabled () {\r\n      if (this.selectedKeys.length !== 3) return true\r\n      return false\r\n    },\r\n    // 是否是三级分类，是就返回该分类的id，不是就返回null\r\n    cateId () {\r\n      if (this.selectedKeys.length === 3) {\r\n        return this.selectedKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    // 添加对话框中的标题内容\r\n    titleText () {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      }\r\n      return '静态属性'\r\n    }\r\n  },\r\n  created () {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取分类列表数据\r\n    async getCateList () {\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status !== 200) return this.$message.error('获取分类列表数据失败！')\r\n      this.cateList = res.data\r\n    },\r\n    // 获取参数列表数据\r\n    async getParamsList () {\r\n      // 选中的不是三级分类\r\n      if (this.selectedKeys.length !== 3) {\r\n        this.selectedKeys = []\r\n        // 不是三级分类时，也要将表单清空，防止三级切换成二级时，仍然显示\r\n        this.manyTableData = []\r\n        this.onlyTableData = []\r\n      }\r\n      // 选中的是三级分类，立即请求数据，以便渲染\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`, { params: { sel: this.activeName } })\r\n      if (res.meta.status !== 200) return\r\n      // console.log(res.data)\r\n\r\n      // 将attr_vals拆分成数组\r\n      res.data.forEach(item => {\r\n        item.attr_vals = item.attr_vals === 0 ? item.attr_vals.split(' ') : []\r\n        // 为这个item添加inputVisible和inputValue\r\n        item.inputVisible = false\r\n        item.inputValue = ''\r\n      })\r\n\r\n      // 分情况给数据赋值\r\n      if (this.activeName === 'many') {\r\n        this.manyTableData = res.data\r\n      } else {\r\n        this.onlyTableData = res.data\r\n      }\r\n    },\r\n    // 监听选择器的改变\r\n    handleChange () {\r\n      // console.log(this.selectedKeys)\r\n      this.getParamsList()\r\n    },\r\n    // 页签点击事件处理函数\r\n    handleTabClick () {\r\n      this.getParamsList()\r\n    },\r\n    // 关闭对话框，重置表单信息\r\n    resetAddForm () {\r\n      this.$refs.addParamsFormRef.resetFields()\r\n    },\r\n    // 点击确定按钮，发起添加参数请求\r\n    addParams () {\r\n      this.$refs.addParamsFormRef.validate(async valid => {\r\n        if (!valid) return this.$message.error('验证未通过')\r\n        const { data: res } = await this.$http.post(`categories/${this.cateId}/attributes`,\r\n          { attr_name: this.addParamsForm.attr_name, attr_sel: this.activeName })\r\n        if (res.meta.status !== 201) return this.$message.error(`添加${this.titleText}失败`)\r\n        this.$message.success(`添加${this.titleText}成功`)\r\n        this.getParamsList()\r\n        this.addDialogVisible = false\r\n      })\r\n    },\r\n    // 关闭对话框，重置修改对话框表单内容\r\n    reseteditForm () {\r\n      this.$refs.editParamsFormRef.resetFields()\r\n    },\r\n    // 点击编辑按钮，打开编辑对话框,将这一行的参数填进表格\r\n    async showEditDialog (attrId) {\r\n      // 将这一行的参数填进表格\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes/${attrId}`, { params: { attr_sel: this.activeName } })\r\n      if (res.meta.status !== 200) return this.$message.error('修改数据失败！')\r\n      // 填充数据\r\n      this.editParamsForm = res.data\r\n      // 显示对话框\r\n      this.editDialogVisible = true\r\n    },\r\n    // 点击确定按钮，修改参数/属性\r\n    editParams () {\r\n      // 先验证表单信息\r\n      this.$refs.editParamsFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        // 表单验证成功就发起修改请求\r\n        // 请求填入表单返回来的数据里面有attr_id\r\n        const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${this.editParamsForm.attr_id}`,\r\n          { attr_name: this.editParamsForm.attr_name, attr_sel: this.activeName })\r\n        if (res.meta.status !== 200) return this.$message.error(`修改${this.titleText}失败`)\r\n        this.$message.success(`修改${this.titleText}成功`)\r\n        this.getParamsList()\r\n        this.editDialogVisible = false\r\n      })\r\n    },\r\n    // 点击删除按钮，删除参数/属性\r\n    async deleteParams (attrId) {\r\n      const confirmResult = await this.$confirm('此操作将永久删除该参数，是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除！')\r\n      }\r\n      // 确认删除，发起删除请求\r\n      const { data: res } = await this.$http.delete(`categories/${this.cateId}/attributes/${attrId}`)\r\n      if (res.meta.status !== 200) return this.$message.error('删除失败！')\r\n      this.getParamsList()\r\n      this.$message.success('删除成功！')\r\n    },\r\n    // 点击newTag显示输入框\r\n    showInput (row) { // 参数传递过来的这一行的数据对象row\r\n      row.inputVisible = true\r\n      // $nextTick方法的作用：当页面上的元素被重新渲染后，才会调用回调函数中的代码\r\n      this.$nextTick(_ => {\r\n        // 令输入框获得焦点\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    // 保存输入框中的数据attr_vals到数据库\r\n    async saveTagData (row) {\r\n      // 发起put请求，提交参数\r\n      const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`, {\r\n        attr_name: row.attr_name,\r\n        attr_sel: row.attr_sel,\r\n        attr_vals: row.attr_vals.join(' ')\r\n      })\r\n      if (res.meta.status !== 200) return this.$message.error('修改参数属性失败')\r\n      this.$message.success('修改参数属性成功')\r\n    },\r\n    // 失去焦点/按下enter键触发\r\n    async handleInputConfirm (row) {\r\n      // 对输入框中的数值进行处理\r\n      if (row.inputValue.trim().length === 0) {\r\n        // 隐藏这一行的输入框，并将内容置为空\r\n        row.inputVisible = false\r\n        row.inputValue = ''\r\n        return\r\n      }\r\n      // 将输入框中的数据存入attr_vals中\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      row.inputVisible = false\r\n      row.inputValue = ''\r\n      this.saveTagData(row)\r\n    },\r\n    // 监听tag标签的关闭事件，删除该tag标签\r\n    async tagClose (i, row) {\r\n      // 删除该项\r\n      row.attr_vals.splice(i, 1)\r\n      this.saveTagData(row)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n.cate-option{\r\n  margin: 15px 0;\r\n}\r\n.el-tag{\r\n  margin: 5px;\r\n}\r\n.input-new-tag,\r\n.button-new-tag{\r\n  width: 120px;\r\n  margin: 5px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=0f645940&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=0f645940&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0f645940\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","staticClass","cateList","CateProps","on","handleChange","model","value","selectedKeys","callback","$$v","expression","handleTabClick","activeName","isBtnDisabled","$event","addDialogVisible","manyTableData","scopedSlots","_u","key","fn","scope","_l","row","attr_vals","item","i","tagClose","_s","inputVisible","ref","handleInputConfirm","nativeOn","type","indexOf","_k","keyCode","inputValue","$set","showInput","showEditDialog","attr_id","deleteParams","onlyTableData","titleText","resetAddForm","addParamsForm","addParamsFormRules","attr_name","slot","addParams","editDialogVisible","reseteditForm","editParamsForm","editParamsFormRules","editParams","staticRenderFns","data","label","children","expandTrigger","required","message","trigger","computed","cateId","created","methods","params","sel","res","attr_sel","confirmButtonText","cancelButtonText","component"],"sourceRoot":""}