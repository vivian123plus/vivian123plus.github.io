{"version":3,"file":"js/773.7be4971a.js","mappings":"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","sources":["webpack://shop_project/./src/components/goods/Cate.vue","webpack://shop_project/src/components/goods/Cate.vue","webpack://shop_project/./src/components/goods/Cate.vue?7e22","webpack://shop_project/./src/components/goods/Cate.vue?980e"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加按钮\")])],1)],1),_c('tree-table',{staticClass:\"treeTable\",attrs:{\"data\":_vm.catelist,\"columns\":_vm.columns,\"border\":\"\",\"show-index\":\"\",\"index-text\":\"#\",\"show-row-hover\":false,\"expand-type\":false,\"selection-type\":false},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted===false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level===0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level===1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"error\",\"size\":\"mini\"}},[_vm._v(\"三级\")])]}}])},[_c('template',{slot:\"option\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"}},[_vm._v(\"删除\")])],1)],2),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[3, 5, 10, 15],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClose}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称：\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类：\"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"clearable\":\"\"},on:{\"change\":_vm.parentCateChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航栏 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片区域 -->\r\n    <el-card>\r\n      <!-- 添加按钮区域 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加按钮</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 表格区域 -->\r\n      <tree-table\r\n      class=\"treeTable\"\r\n      :data=\"catelist\"\r\n      :columns=\"columns\"\r\n      border\r\n      show-index\r\n      index-text=\"#\"\r\n      :show-row-hover=\"false\"\r\n      :expand-type=\"false\"\r\n      :selection-type=\"false\"\r\n      >\r\n        <!-- 是否有效模板 -->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted===false\" style=\"color:lightgreen\"></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color:red\"></i>\r\n        </template>\r\n\r\n        <!-- 排序模板 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.cat_level===0\" size=\"mini\">一级</el-tag>\r\n          <el-tag type=\"success\" v-else-if=\"scope.row.cat_level===1\" size=\"mini\">二级</el-tag>\r\n          <el-tag type=\"error\" v-else size=\"mini\">三级</el-tag>\r\n        </template>\r\n\r\n        <!-- 操作模板 -->\r\n        <template slot=\"option\">\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addCateDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addCateDialogClose\">\r\n      <el-form\r\n        :model=\"addCateForm\"\r\n        :rules=\"addCateFormRules\"\r\n        ref=\"addCateFormRef\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <!-- 级联选择器 -->\r\n          <!-- options指定数据源 -->\r\n          <el-cascader\r\n            v-model=\"selectedKeys\"\r\n            :options=\"parentCateList\"\r\n            :props=\"cascaderProps\"\r\n            @change=\"parentCateChange\"\r\n            clearable></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      // 查询参数对象\r\n      queryInfo: {\r\n        // 显示的是多少层分类列表\r\n        type: 3,\r\n        // 当前页码值\r\n        pagenum: 1,\r\n        // 每页有多少条数据\r\n        pagesize: 5\r\n      },\r\n      // 商品分类数据列表\r\n      catelist: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // 为table指定列的定义\r\n      columns: [{\r\n        label: '分类名称',\r\n        prop: 'cat_name'\r\n      }, {\r\n        label: '是否有效',\r\n        // 表示当前列定义为模板列\r\n        type: 'template',\r\n        // 指定模板列使用的模板名称\r\n        template: 'isok'\r\n      }, {\r\n        label: '排序',\r\n        type: 'template',\r\n        template: 'order'\r\n      }, {\r\n        label: '操作',\r\n        type: 'template',\r\n        template: 'option'\r\n      }],\r\n      // 控制添加分类对话框的显示与隐藏\r\n      addCateDialogVisible: false,\r\n      // 添加分类的表单对象\r\n      addCateForm: {\r\n        // 分类名称\r\n        cat_name: '',\r\n        // 父级id，默认当前添加的就是一级分类，父级id为0\r\n        cat_pid: 0,\r\n        // 分类层级，默认为一级分类\r\n        cat_level: 0\r\n      },\r\n      // 添加分类表单验证规则\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 父级分类数据列表\r\n      parentCateList: [],\r\n      // 被选中的分类id数组\r\n      selectedKeys: [],\r\n      // 配置选项\r\n      cascaderProps: {\r\n        // 指定触发方式\r\n        expandTrigger: 'hover',\r\n        // 选中的分类的id\r\n        value: 'cat_id',\r\n        // 选中的分类的名字\r\n        label: 'cat_name',\r\n        // 父子关系\r\n        children: 'children',\r\n        // 可以只选择父级，不选父级+子级\r\n        checkStrictly: true\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取商品分类数据列表\r\n    async getCateList () {\r\n      const { data: res } = await this.$http.get('categories', { params: this.queryInfo })\r\n      // console.log(res)\r\n      if (res.meta.status !== 200) return this.$message.error('获取商品分类数据列表失败！')\r\n      this.catelist = res.data.result\r\n      this.total = res.data.total\r\n    },\r\n    // 监听pagesize的改变，得到当前每页信息条数\r\n    handleSizeChange (newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getCateList()\r\n    },\r\n    // 监听pagenum的改变，得到当前页码\r\n    handleCurrentChange (newPagenum) {\r\n      this.queryInfo.pagenum = newPagenum\r\n      this.getCateList()\r\n    },\r\n    // 点击添加按钮，显示添加分类对话框\r\n    showAddCateDialog () {\r\n      // 获取父级分类列表数据\r\n      this.getparentCateList()\r\n      this.addCateDialogVisible = true\r\n    },\r\n    // 获取父级分类数据列表\r\n    async getparentCateList () {\r\n      // 只需要获取前两级的分类即可\r\n      const { data: res } = await this.$http.get('categories', { params: { type: 2 } })\r\n      if (res.meta.status !== 200) return this.$message.error('获取父级分类数据失败！')\r\n      this.parentCateList = res.data\r\n    },\r\n    // 选择项发生变化\r\n    parentCateChange () {\r\n      // console.log(this.selectedKeys)\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级id\r\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\r\n        // 属于第几层级\r\n        this.addCateForm.cat_level = this.selectedKeys.length\r\n      } else {\r\n        // 重置父级id和当前分类所处层级\r\n        this.addCateForm.cat_pid = 0\r\n        this.addCateForm.cat_level = 0\r\n      }\r\n    },\r\n    // 点击确定按钮，添加分类\r\n    addCate () {\r\n      // console.log(this.addCateForm)\r\n      // 确认是否校验成功\r\n      this.$refs.addCateFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        // 验证通过，发起post请求，将分类添加进去\r\n        const { data: res } = await this.$http.post('categories', this.addCateForm)\r\n        if (res.meta.status !== 201) return this.$message.error('添加分类失败！')\r\n        this.$message.success('添加分类成功！')\r\n        this.getCateList()\r\n        this.addCateDialogVisible = false\r\n      })\r\n    },\r\n    // 监听对话框关闭事件，重置对话框的内容\r\n    addCateDialogClose () {\r\n      // 重置表单内容\r\n      this.$refs.addCateFormRef.resetFields()\r\n      // 重置已选中的分类\r\n      this.selectedKeys = []\r\n      // 重置添加分类信息对象里面的信息，由于cat_name=表单里面的内容，已经被重置了，所以这里不需要再重置一次\r\n      this.addCateForm.cat_pid = 0\r\n      this.addCateForm.cat_level = 0\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n// 不能直接用标签名当作类名，因为不是el-XXX类型的\r\n.treeTable{\r\n  margin-top: 15px;\r\n}\r\n.el-cascader{\r\n  width: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=195a48c0&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=195a48c0&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"195a48c0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","showAddCateDialog","staticClass","catelist","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","slot","queryInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","$event","addCateDialogClose","ref","addCateForm","addCateFormRules","model","value","cat_name","callback","$$v","$set","expression","parentCateList","cascaderProps","parentCateChange","selectedKeys","addCate","staticRenderFns","data","type","label","prop","template","cat_pid","required","message","trigger","expandTrigger","children","checkStrictly","created","methods","params","component"],"sourceRoot":""}